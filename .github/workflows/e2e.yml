name: e2e

on:
  push:
  pull_request:
    branches: [ master, testing ]
env:
  REGISTRY: ${{ secrets.REGISTRY}}
  go_version: '1.16.8'
  golangci_version: '1.37.0'
jobs:
  e2e:
    runs-on: ubuntu-20.04
    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Check position
      run: |
        echo $RUNNER_WORKSPACE

    - name: Add csi-baremetal-operator
      uses: actions/checkout@v2
      with:
        repository: dell/csi-baremetal-operator 
        path: ./csi-baremetal-operator
        
    - name: Set environment variables
      run: |
        echo "CSI_BAREMETAL_DIR=$RUNNER_WORKSPACE/csi-baremetal/" >> $GITHUB_ENV
        echo "CSI_BAREMETAL_OPERATOR_DIR=$RUNNER_WORKSPACE/csi-baremetal/csi-baremetal-operator/" >> $GITHUB_ENV

    - name: Prepare Golang 
      uses: actions/setup-go@v2
      with:
        go-version: ${{env.go_version}}

    - name: Load dep cache
      uses: actions/cache@v2
      with:
        path: ~/go/pkg/mod
        key: go-dep-${{ env.go_version }}-${{ hashFiles('**/go.sum') }}
        restore-keys: go-dep-${{ env.go_version }}-
          
    - name: Load build and linter cache
      uses: actions/cache@v2
      with:
        path: |
          ~/.cache/go-build
          ~/.cache/golangci-lint
        key: go-build-${{ env.go_version }}-${{ hashFiles('**/go.sum') }}-${{ hashFiles('**/pkg') }}
        restore-keys: |
          go-build-${{ env.go_version }}-${{ hashFiles('**/go.sum') }}
          go-build-${{ env.go_version }}-

    - name: LVM2 install
      run: sudo apt-get install -y lvm2

    - name: Install helm
      uses: azure/setup-helm@v1

    - name: Kubectl install
      uses: azure/setup-kubectl@v1

    - name: add CSI_VERSION
      run: |
        cd ${{env.CSI_BAREMETAL_DIR}}
        echo "CSI_VERSION=`make version`" >> $GITHUB_ENV

    - name: Get dependencies
      run: make dependency

    - name: Compile proto files
      run: |
        make install-protoc
        cd ${realpath protoc-gen-go}
        ls -all
        echo 'export PATH=${PATH}:${GOPATH}/bin' >> ${HOME}/.bashrc
        source ${HOME}/.bashrc
        echo "$RUNNER_WORKSPACE/csi-baremetal/protoc-gen-go" >> $GITHUB_PATH
        make compile-proto

    - name: Generate CRD
      run: |
        make install-controller-gen 
        make generate-deepcopy

    - name: Build binary
      run: |
        make build
        make DRIVE_MANAGER_TYPE=loopbackmgr build-drivemgr

    - name: Download health-probe
      run: make download-grpc-health-probe

    - name: Build docker images
      run: |
          make images REGISTRY=${{ env.REGISTRY }}
          make DRIVE_MANAGER_TYPE=loopbackmgr image-drivemgr REGISTRY=${{ env.REGISTRY }}

    - name: add CSI_OPERATOR_VERSION
      run: |
        cd ${{env.CSI_BAREMETAL_OPERATOR_DIR}}
        echo "CSI_OPERATOR_VERSION=`make version`" >> $GITHUB_ENV
    
    - name: docker-build operators 
      run: |
        cd ${{env.CSI_BAREMETAL_OPERATOR_DIR}}
        make docker-build REGISTRY=${{ env.REGISTRY }}
   
    - name: Kind preparation
      run: |
        cd ${{env.CSI_BAREMETAL_DIR}}
        make kind-build KIND_VER=0.11.1
        make kind-create-cluster-v19
        kubectl cluster-info --context kind-kind
        kubectl get pods -o wide --all-namespaces 
        echo "current-context:" $(kubectl config current-context)
        echo "environment-kubeconfig:" ${KUBECONFIG}
    
    - name: Sleep for 60 seconds
      uses: jakejarvis/wait-action@master
      with:
        time: '60s' 

    - name: Check pods
      run: |
        kubectl cluster-info --context kind-kind
        kubectl get pods -o wide --all-namespaces

    - name: Sidecars preparing
      run: |
        make deps-docker-pull
        make deps-docker-tag

    - name: Retag CSI images and load them to kind
      run: |
        docker images 
        make kind-tag-images TAG=$CSI_VERSION REGISTRY=${{ env.REGISTRY }}
        make kind-load-images TAG=$CSI_VERSION REGISTRY=${{ env.REGISTRY }}
        make load-operator-image OPERATOR_VERSION=$CSI_OPERATOR_VERSION REGISTRY=${{ env.REGISTRY }}
          
    - name: Make test
      run: make test-short-ci CSI_VERSION=$CSI_VERSION OPERATOR_VERSION=$CSI_OPERATOR_VERSION CHARTS_DIR=${{env.CSI_BAREMETAL_OPERATOR_DIR}}charts

    - name: Upload report to artifacts
      uses: actions/upload-artifact@v2.2.1
      with:
        name: report.xml
        path: test/e2e/report.xml
    
    - name: Upload log to artifacts
      uses: actions/upload-artifact@v2.2.1
      with:
        name: log.txt
        path: log.txt